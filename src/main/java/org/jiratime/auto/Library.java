/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.jiratime.auto;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import com.opencsv.CSVReader;

import org.apache.logging.log4j.Logger;
import org.jiratime.auto.home.main.JiraHomePage;
import org.jiratime.auto.home.main.JiraTicketPage;
import org.jiratime.auto.home.main.JiraWorkLogPage;
import org.jiratime.auto.login.JiraLoginPage;
import org.jiratime.auto.login.JiraLoginPageExt;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.BeforeClass;

import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.ParseException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.logging.log4j.LogManager;

public class Library {

	private static final Logger logger = LogManager.getLogger(Library.class);	
	private WebDriver driver;
	private  Properties prop;
	private Configurations configurations;

	public Library() {
		configurations = new Configurations();
		setUp();
	}

	public boolean someLibraryMethod() {
		return true;
	} 	

	private  void setUp() {
		String chromeDriverPath = configurations.get("chrome.driver.path");
		System.setProperty("webdriver.chrome.driver",chromeDriverPath);
		driver = new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		loadProperties();	
	}

	private  void loadProperties() {		
		try (InputStream input = ClassLoader.getSystemResourceAsStream("app.properties")) {
			prop = new Properties();
			// load a properties file
			prop.load(input);
			// get the property value and print it out
			logger.info("url value -" + prop.getProperty("url"));	

		} catch (IOException ex) {
			logger.error("Unable to load properties", ex);
		}
	}
	

	public void cleanUp(){
		driver.manage().deleteAllCookies();
	}

	public  void tearDown(){
		driver.close();
	}
	
	public void start() throws IOException, InterruptedException, ParseException {
		try (
				
				Reader reader = Files.newBufferedReader(Paths.get(configurations.get("csv.file.path")));
				CSVReader csvReader = new CSVReader(reader);
				) 
		{
			String url = (String)prop.get("jira.login.url");
			driver.get(url);
			JiraLoginPageExt loginPageExt = new JiraLoginPageExt(driver);		
			loginPageExt.enterUserName("averma");
			loginPageExt.enterPassword("Purse5073#");
			JiraLoginPage jiraLoginPage = loginPageExt.submit();
			
			jiraLoginPage.enterUserName("averma");
			jiraLoginPage.enterPassword("Purse5073#");
			JiraHomePage homePage = jiraLoginPage.submit();
			Configurations configurations = new Configurations();			
			String[] nextRecord;
			boolean header = true;
			while ((nextRecord = csvReader.readNext()) != null) {
				if (header) {
					header = false;
					continue;
				}
				String jiraTicket = nextRecord[0];
				String startDate = nextRecord[1];
				String timeLog = nextRecord[2];
				
				JiraTicketPage jiraTicketPage = homePage.openJiraTicket(jiraTicket);
				JiraWorkLogPage worklogPage = jiraTicketPage.openWorklogPage();
				homePage = worklogPage.logTime(timeLog, startDate);
			}
		}
		cleanUp();
		tearDown();
	}
	

	public static void main(String[] args) throws IOException, InterruptedException, ParseException {
		new Library().start();
	}
}
